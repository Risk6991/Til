/**
*   Component
*   使い回しのできるパーツを整理しまとめておくクラス
*   接頭辞としてc-をつける
*   また使い回しの効く状態クラスもここ
*   接頭辞として-をつける
**/

//Materialize準拠の影 状態として付与する
.-shadow {
    -webkit-box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14),
        0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.3);
    box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14),
        0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.3);
}

//アニメーション。アイコンが跳ねる想定。
.poyo {
    animation: poyo 0.9s linear 0s infinite;
}

@keyframes poyo {
    0% {
        transform: scale(1, 1) translate(0%, 0%);
    }

    10% {
        transform: scale(1.1, 0.9) translate(0%, 5%);
    }

    40% {
        transform: scale(1.2, 0.8) translate(0%, 15%);
    }

    50% {
        transform: scale(1, 1) translate(0%, 0%);
    }

    60% {
        transform: scale(0.9, 1.2) translate(0%, -100%);
    }

    75% {
        transform: scale(0.9, 1.2) translate(0%, -20%);
    }

    85% {
        transform: scale(1.2, 0.8) translate(0%, 15%);
    }

    100% {
        transform: scale(1, 1) translate(0%, 0%);
    }
}
//ステータスアイコンの設定用
.c-status-icon {
    position: absolute;
    top: rem(20);
    right: rem(20);
    border-radius: 5px; //車両情報のステータス用に設定
}

//画像の比率を保ったままに表示する（様に見せる）
.c-img-aspectRatio {
    object-fit: contain;
    width: 100%;
    height: rem(100);
    background-color: #ccc;
    border: 1px solid #ccc;
}

//画像を最大表示する
.c-img-aspectRatio--full {
    width: 100%;
    height: auto;
    //resetCSSがmergeされたら不要になる。
    //画像の下要素の間に隙間が発生するため記述
    vertical-align: bottom;
    background-color: #ccc;
    border: 1px solid #ccc;
    //上辺の両角のみ丸みをもたせる
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
    object-fit: contain;
}

//アスペクト比4:3で伸縮させる。
.c-img-aspectRatio--43 {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    //resetCSSがmergeされたら不要になる。
    //画像の下要素の間に隙間が発生するため記述
    vertical-align: bottom;
    background-color: #ccc;
    border: 1px solid #ccc;
    //上辺の両角のみ丸みをもたせる
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
    object-fit: contain;
}

//使いまわしのできるテキスト入力エリア
.c-textArea {
    width: 90%;
    height: rem(180);
    padding: rem(5) rem(10);
    //テキストリサイズ禁止（右下の三角を消す）
    resize: none;
    background: #fff 0% 0% no-repeat padding-box;
    border: 1px solid #ccc;
    border-radius: 5px;

    outline: none;
    outline-offset: -2px;
    opacity: 1;
    appearance: none;
    //フォーカス時のリセット
    &:focus {
        border: 1px solid #ccc;
        outline: none;
        box-shadow: none;
    }
}

//border-rightのみ付与する
.-border-right {
    border-right: 1px solid #e0e0e0;
}
/* アコーディオンメニューをcssで実装 */
.c-accordion__index {
    width: 100%;
    height: auto;
    font-weight: bold;
    list-style-image: url(/Sharing/Images/aracan-icon__arrow--right.svg);
    cursor: pointer;
    border: none;
    outline: none;
}
.c-accordion__index::-webkit-details-marker {
    color: transparent;
    background: url(/Sharing/Images/aracan-icon__arrow--right.svg) no-repeat
        center/10px;
}

details {
    width: 100%;
    height: rem(30);
    background: #edf2f1;
    transition: 0.8s;
}
details[open] {
    width: 100%;
    height: rem(533);
    margin-bottom: rem(50);
    background: #fff;
    transition: 0.8s;
}
